/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WETHMock, WETHMockInterface } from "../WETHMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604080518082018252600d81526c2bb930b83832b21022ba3432b960991b6020808301918252835180850190945260048452630ae8aa8960e31b9084015281519192916012916200006791600091906200015f565b5081516200007d9060019060208501906200015f565b507fff0000000000000000000000000000000000000000000000000000000000000060f882901b166080524660a052620000b6620000c3565b60c05250620002e5915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000f7919062000205565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8280546200016d90620002a8565b90600052602060002090601f016020900481019282620001915760008555620001dc565b82601f10620001ac57805160ff1916838001178555620001dc565b82800160010185558215620001dc579182015b82811115620001dc578251825591602001919060010190620001bf565b50620001ea929150620001ee565b5090565b5b80821115620001ea5760008155600101620001ef565b81546000908190600281046001808316806200022257607f831692505b60208084108214156200024357634e487b7160e01b87526022600452602487fd5b8180156200025a57600181146200026c576200029a565b60ff198616895284890196506200029a565b60008a815260209020885b86811015620002925781548b82015290850190830162000277565b505084890196505b509498975050505050505050565b600281046001821680620002bd57607f821691505b60208210811415620002df57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160f81c60a05160c051610d966200031860003960006105dc015260006105a8015260006102050152610d966000f3fe6080604052600436106100ec5760003560e01c80633644e5151161008a578063a9059cbb11610059578063a9059cbb146102bd578063d0e30db0146102dd578063d505accf146102e5578063dd62ed3e14610305576100fb565b80633644e5151461023957806370a082311461024e5780637ecebe001461027b57806395d89b41146102a8576100fb565b806323b872dd116100c657806323b872dd1461017f5780632e1a7d4d1461019f57806330adf81f146101bf578063313ce567146101f3576100fb565b806306fdde0314610100578063095ea7b31461012b57806318160ddd1461015b576100fb565b366100fb576100f961033d565b005b600080fd5b34801561010c57600080fd5b5061011561037e565b6040516101229190610c6d565b60405180910390f35b34801561013757600080fd5b5061014b610146366004610b91565b61040c565b6040519015158152602001610122565b34801561016757600080fd5b5061017160025481565b604051908152602001610122565b34801561018b57600080fd5b5061014b61019a366004610ae5565b610478565b3480156101ab57600080fd5b506100f96101ba366004610bba565b610558565b3480156101cb57600080fd5b506101717f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b3480156101ff57600080fd5b506102277f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610122565b34801561024557600080fd5b506101716105a4565b34801561025a57600080fd5b50610171610269366004610a92565b60036020526000908152604090205481565b34801561028757600080fd5b50610171610296366004610a92565b60056020526000908152604090205481565b3480156102b457600080fd5b50610115610601565b3480156102c957600080fd5b5061014b6102d8366004610b91565b61060e565b6100f961033d565b3480156102f157600080fd5b506100f9610300366004610b20565b610674565b34801561031157600080fd5b50610171610320366004610ab3565b600460209081526000928352604080842090915290825290205481565b61034733346108ca565b60405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b6000805461038b90610cef565b80601f01602080910402602001604051908101604052809291908181526020018280546103b790610cef565b80156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104679086815260200190565b60405180910390a350600192915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146104d4576104af8382610cd8565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906104fc908490610cd8565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020610d41833981519152906105459087815260200190565b60405180910390a3506001949350505050565b6105623382610924565b60405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a26105a13382610986565b50565b60007f000000000000000000000000000000000000000000000000000000000000000046146105da576105d56109dc565b6105fc565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b6001805461038b90610cef565b3360009081526003602052604081208054839190839061062f908490610cd8565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020610d41833981519152906104679086815260200190565b428410156106c95760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b60006106d36105a4565b6001600160a01b0389811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938c166060840152608083018b905260a083019390935260c08083018a90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156107ec573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906108225750886001600160a01b0316816001600160a01b0316145b61085f5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016106c0565b6001600160a01b0390811660009081526004602090815260408083208b8516808552908352928190208a905551898152919350918a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b80600260008282546108dc9190610cc0565b90915550506001600160a01b038216600081815260036020908152604080832080548601905551848152600080516020610d4183398151915291015b60405180910390a35050565b6001600160a01b0382166000908152600360205260408120805483929061094c908490610cd8565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020610d4183398151915290602001610918565b600080600080600085875af19050806109d75760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b60448201526064016106c0565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610a0e9190610bd2565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80356001600160a01b0381168114610a8d57600080fd5b919050565b600060208284031215610aa3578081fd5b610aac82610a76565b9392505050565b60008060408385031215610ac5578081fd5b610ace83610a76565b9150610adc60208401610a76565b90509250929050565b600080600060608486031215610af9578081fd5b610b0284610a76565b9250610b1060208501610a76565b9150604084013590509250925092565b600080600080600080600060e0888a031215610b3a578283fd5b610b4388610a76565b9650610b5160208901610a76565b95506040880135945060608801359350608088013560ff81168114610b74578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610ba3578182fd5b610bac83610a76565b946020939093013593505050565b600060208284031215610bcb578081fd5b5035919050565b8154600090819060028104600180831680610bee57607f831692505b6020808410821415610c0e57634e487b7160e01b87526022600452602487fd5b818015610c225760018114610c3357610c5f565b60ff19861689528489019650610c5f565b60008a815260209020885b86811015610c575781548b820152908501908301610c3e565b505084890196505b509498975050505050505050565b6000602080835283518082850152825b81811015610c9957858101830151858201604001528201610c7d565b81811115610caa5783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610cd357610cd3610d2a565b500190565b600082821015610cea57610cea610d2a565b500390565b600281046001821680610d0357607f821691505b60208210811415610d2457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212204e51f2f14f32a7022f1a12b3c11ac7d6bf6433706a6d0d11dc0eea1f2ce2c1f664736f6c63430008020033";

export class WETHMock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WETHMock> {
    return super.deploy(overrides || {}) as Promise<WETHMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WETHMock {
    return super.attach(address) as WETHMock;
  }
  connect(signer: Signer): WETHMock__factory {
    return super.connect(signer) as WETHMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETHMockInterface {
    return new utils.Interface(_abi) as WETHMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WETHMock {
    return new Contract(address, _abi, signerOrProvider) as WETHMock;
  }
}
