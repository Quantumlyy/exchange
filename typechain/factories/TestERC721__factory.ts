/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestERC721, TestERC721Interface } from "../TestERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600a8152602001695465737445524337323160b01b815250604051806040016040528060038152602001621514d560ea1b8152506200006b620000656200009f60201b60201c565b620000a3565b815162000080906001906020850190620000f3565b50805162000096906002906020840190620000f3565b505050620001d6565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620001019062000199565b90600052602060002090601f01602090048101928262000125576000855562000170565b82601f106200014057805160ff191683800117855562000170565b8280016001018555821562000170579182015b828111156200017057825182559160200191906001019062000153565b506200017e92915062000182565b5090565b5b808211156200017e576000815560010162000183565b600281046001821680620001ae57607f821691505b60208210811415620001d057634e487b7160e01b600052602260045260246000fd5b50919050565b611a6e80620001e66000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80634f6ccce7116100b857806395d89b411161007c57806395d89b411461027c578063a22cb46514610284578063b88d4fde14610297578063c87b56dd146102aa578063e985e9c5146102bd578063f2fde38b146102f957610137565b80634f6ccce71461022a5780636352211e1461023d57806370a0823114610250578063715018a6146102635780638da5cb5b1461026b57610137565b806318160ddd116100ff57806318160ddd146101cc57806323b872dd146101de5780632f745c59146101f157806340c10f191461020457806342842e0e1461021757610137565b8063016ea35a1461013c57806301ffc9a71461015157806306fdde0314610179578063081812fc1461018e578063095ea7b3146101b9575b600080fd5b61014f61014a3660046115aa565b61030c565b005b61016461015f366004611769565b61032c565b60405190151581526020015b60405180910390f35b61018161033f565b6040516101709190611851565b6101a161019c3660046117a1565b6103d1565b6040516001600160a01b039091168152602001610170565b61014f6101c7366004611740565b61046b565b6009545b604051908152602001610170565b61014f6101ec3660046115f6565b610581565b6101d06101ff366004611740565b6105b2565b61014f610212366004611740565b610648565b61014f6102253660046115f6565b610652565b6101d06102383660046117a1565b61066d565b6101a161024b3660046117a1565b61070e565b6101d061025e3660046115aa565b610785565b61014f61080c565b6000546001600160a01b03166101a1565b610181610872565b61014f610292366004611706565b610881565b61014f6102a5366004611631565b61088c565b6101816102b83660046117a1565b6108c4565b6101646102cb3660046115c4565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b61014f6103073660046115aa565b6109ac565b600061031760095490565b905061032882610212836001611907565b5050565b600061033782610a77565b90505b919050565b60606001805461034e90611976565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90611976565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000818152600360205260408120546001600160a01b031661044f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b60006104768261070e565b9050806001600160a01b0316836001600160a01b031614156104e45760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610446565b336001600160a01b0382161480610500575061050081336102cb565b6105725760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610446565b61057c8383610a9c565b505050565b61058b3382610b0a565b6105a75760405162461bcd60e51b8152600401610446906118b6565b61057c838383610c01565b60006105bd83610785565b821061061f5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610446565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b6103288282610dac565b61057c8383836040518060200160405280600081525061088c565b600061067860095490565b82106106db5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610446565b600982815481106106fc57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b6000818152600360205260408120546001600160a01b0316806103375760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610446565b60006001600160a01b0382166107f05760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610446565b506001600160a01b031660009081526004602052604090205490565b6000546001600160a01b031633146108665760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610446565b6108706000610dc6565b565b60606002805461034e90611976565b610328338383610e16565b6108963383610b0a565b6108b25760405162461bcd60e51b8152600401610446906118b6565b6108be84848484610ee5565b50505050565b6000818152600360205260409020546060906001600160a01b03166109435760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610446565b600061095a60408051602081019091526000815290565b9050600081511161097a57604051806020016040528060008152506109a5565b8061098484610f18565b6040516020016109959291906117e5565b6040516020818303038152906040525b9392505050565b6000546001600160a01b03163314610a065760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610446565b6001600160a01b038116610a6b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610446565b610a7481610dc6565b50565b60006001600160e01b0319821663780e9d6360e01b1480610337575061033782611033565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ad18261070e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600360205260408120546001600160a01b0316610b835760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610446565b6000610b8e8361070e565b9050806001600160a01b0316846001600160a01b03161480610bc95750836001600160a01b0316610bbe846103d1565b6001600160a01b0316145b80610bf957506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610c148261070e565b6001600160a01b031614610c7c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610446565b6001600160a01b038216610cde5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610446565b610ce9838383611083565b610cf4600082610a9c565b6001600160a01b0383166000908152600460205260408120805460019290610d1d908490611933565b90915550506001600160a01b0382166000908152600460205260408120805460019290610d4b908490611907565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61032882826040518060200160405280600081525061108e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b03161415610e785760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610446565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ef0848484610c01565b610efc848484846110c1565b6108be5760405162461bcd60e51b815260040161044690611864565b606081610f3d57506040805180820190915260018152600360fc1b602082015261033a565b8160005b8115610f675780610f51816119b1565b9150610f609050600a8361191f565b9150610f41565b60008167ffffffffffffffff811115610f9057634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610fba576020820181803683370190505b5090505b8415610bf957610fcf600183611933565b9150610fdc600a866119cc565b610fe7906030611907565b60f81b81838151811061100a57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535061102c600a8661191f565b9450610fbe565b60006001600160e01b031982166380ac58cd60e01b148061106457506001600160e01b03198216635b5e139f60e01b145b8061033757506301ffc9a760e01b6001600160e01b0319831614610337565b61057c8383836111ce565b611098838361128b565b6110a560008484846110c1565b61057c5760405162461bcd60e51b815260040161044690611864565b60006001600160a01b0384163b156111c357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611105903390899088908890600401611814565b602060405180830381600087803b15801561111f57600080fd5b505af192505050801561114f575060408051601f3d908101601f1916820190925261114c91810190611785565b60015b6111a9573d80801561117d576040519150601f19603f3d011682016040523d82523d6000602084013e611182565b606091505b5080516111a15760405162461bcd60e51b815260040161044690611864565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bf9565b506001949350505050565b6001600160a01b0383166112295761122481600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b61124c565b816001600160a01b0316836001600160a01b03161461124c5761124c83826113d9565b6001600160a01b0382166112685761126381611476565b61057c565b826001600160a01b0316826001600160a01b03161461057c5761057c828261154f565b6001600160a01b0382166112e15760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610446565b6000818152600360205260409020546001600160a01b0316156113465760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610446565b61135260008383611083565b6001600160a01b038216600090815260046020526040812080546001929061137b908490611907565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060016113e684610785565b6113f09190611933565b600083815260086020526040902054909150808214611443576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b60095460009061148890600190611933565b6000838152600a6020526040812054600980549394509092849081106114be57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080600983815481106114ed57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255828152600a9091526040808220849055858252812055600980548061153357634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600061155a83610785565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b80356001600160a01b038116811461033a57600080fd5b6000602082840312156115bb578081fd5b6109a582611593565b600080604083850312156115d6578081fd5b6115df83611593565b91506115ed60208401611593565b90509250929050565b60008060006060848603121561160a578081fd5b61161384611593565b925061162160208501611593565b9150604084013590509250925092565b60008060008060808587031215611646578081fd5b61164f85611593565b935061165d60208601611593565b925060408501359150606085013567ffffffffffffffff80821115611680578283fd5b818701915087601f830112611693578283fd5b8135818111156116a5576116a5611a0c565b604051601f8201601f19908116603f011681019083821181831017156116cd576116cd611a0c565b816040528281528a60208487010111156116e5578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215611718578182fd5b61172183611593565b915060208301358015158114611735578182fd5b809150509250929050565b60008060408385031215611752578182fd5b61175b83611593565b946020939093013593505050565b60006020828403121561177a578081fd5b81356109a581611a22565b600060208284031215611796578081fd5b81516109a581611a22565b6000602082840312156117b2578081fd5b5035919050565b600081518084526117d181602086016020860161194a565b601f01601f19169290920160200192915050565b600083516117f781846020880161194a565b83519083019061180b81836020880161194a565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611847908301846117b9565b9695505050505050565b6000602082526109a560208301846117b9565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000821982111561191a5761191a6119e0565b500190565b60008261192e5761192e6119f6565b500490565b600082821015611945576119456119e0565b500390565b60005b8381101561196557818101518382015260200161194d565b838111156108be5750506000910152565b60028104600182168061198a57607f821691505b602082108114156119ab57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156119c5576119c56119e0565b5060010190565b6000826119db576119db6119f6565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610a7457600080fdfea2646970667358221220fb83566e412a80edb8f9dc15c06b57f34ccf5001f3804d8675a41313831a112764736f6c63430008020033";

export class TestERC721__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC721> {
    return super.deploy(overrides || {}) as Promise<TestERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestERC721 {
    return super.attach(address) as TestERC721;
  }
  connect(signer: Signer): TestERC721__factory {
    return super.connect(signer) as TestERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC721Interface {
    return new utils.Interface(_abi) as TestERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC721 {
    return new Contract(address, _abi, signerOrProvider) as TestERC721;
  }
}
